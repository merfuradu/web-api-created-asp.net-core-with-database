// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAPI_week1;

#nullable disable

namespace WebAPI_week1.Migrations
{
    [DbContext(typeof(PersonsDB))]
    [Migration("20240813075149_DatumMigration")]
    partial class DatumMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAPI_week1.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("PersonalDataId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonalDataId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WebAPI_week1.Models.Datum", b =>
                {
                    b.Property<int>("DId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DId"));

                    b.Property<float>("AppTemp")
                        .HasColumnType("real");

                    b.Property<int>("Clouds")
                        .HasColumnType("integer");

                    b.Property<int>("CloudsHi")
                        .HasColumnType("integer");

                    b.Property<int>("CloudsLow")
                        .HasColumnType("integer");

                    b.Property<int>("CloudsMid")
                        .HasColumnType("integer");

                    b.Property<string>("Datetime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Dewpt")
                        .HasColumnType("real");

                    b.Property<int>("Dhi")
                        .HasColumnType("integer");

                    b.Property<int>("Dni")
                        .HasColumnType("integer");

                    b.Property<int>("Ghi")
                        .HasColumnType("integer");

                    b.Property<int>("Ozone")
                        .HasColumnType("integer");

                    b.Property<string>("Pod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pop")
                        .HasColumnType("integer");

                    b.Property<int>("Precip")
                        .HasColumnType("integer");

                    b.Property<int>("Pres")
                        .HasColumnType("integer");

                    b.Property<int>("Rh")
                        .HasColumnType("integer");

                    b.Property<int>("Slp")
                        .HasColumnType("integer");

                    b.Property<int>("Snow")
                        .HasColumnType("integer");

                    b.Property<int>("SnowDepth")
                        .HasColumnType("integer");

                    b.Property<float>("SolarRad")
                        .HasColumnType("real");

                    b.Property<float>("Temp")
                        .HasColumnType("real");

                    b.Property<DateTime>("TimestampLocal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Ts")
                        .HasColumnType("integer");

                    b.Property<int>("Uv")
                        .HasColumnType("integer");

                    b.Property<float>("Vis")
                        .HasColumnType("real");

                    b.Property<int>("WeatherId")
                        .HasColumnType("integer");

                    b.Property<string>("WindCdir")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WindCdirFull")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WindDir")
                        .HasColumnType("integer");

                    b.Property<float>("WindGustSpd")
                        .HasColumnType("real");

                    b.Property<float>("WindSpd")
                        .HasColumnType("real");

                    b.HasKey("DId");

                    b.HasIndex("WeatherId");

                    b.ToTable("DataPoints");
                });

            modelBuilder.Entity("WebAPI_week1.Models.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PersonalData");
                });

            modelBuilder.Entity("WebAPI_week1.Models.Weather", b =>
                {
                    b.Property<int>("WId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Lat")
                        .HasColumnType("real");

                    b.Property<float>("Lon")
                        .HasColumnType("real");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WId");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("WebAPI_week1.Models.Address", b =>
                {
                    b.HasOne("WebAPI_week1.Models.PersonalData", "PersonalData")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonalDataId");

                    b.Navigation("PersonalData");
                });

            modelBuilder.Entity("WebAPI_week1.Models.Datum", b =>
                {
                    b.HasOne("WebAPI_week1.Models.Weather", "Weather")
                        .WithMany("DataPoints")
                        .HasForeignKey("WeatherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Weather");
                });

            modelBuilder.Entity("WebAPI_week1.Models.PersonalData", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("WebAPI_week1.Models.Weather", b =>
                {
                    b.Navigation("DataPoints");
                });
#pragma warning restore 612, 618
        }
    }
}
